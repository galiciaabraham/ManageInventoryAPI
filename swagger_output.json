{
  "swagger": "2.0",
  "info": {
    "title": "Inventory Management API",
    "description": "An API to manage your inventory using HTTP requests.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/product",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Return all the products found in the database.",
        "responses": {
          "200": {
            "description": "OK"
          }, "404": {
            "description": "Product not found"
          }
        }
      },
      "post": {
        "description": "Add a new product to the database and push it to the current session list.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "8"
                },
                "product_name": {
                  "example": "New product"
                },
                "quantity": {
                  "example": "50"
                },
                "entry_date": {
                  "example": "1-1-1999"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product added. Added product returned"
          },
          "500": {
            "description": "An error occured while adding the product"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "Get a product from the dabase based on the product_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }, "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "description": "Update an existing product in the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_name": {
                  "example": "New product"
                },
                "quantity": {
                  "example": "50"
                },
                "entry_date": {
                  "example": "1-1-1999"
                }
              }
            }
          }
        ],
        "responses": {
          "200" : {
            "description" : "OK, updated item returned"
          },
          "500" : {
            "description": "An error occured while updating the product"
          }
        }
      },
      "delete": {
        "description": "Delete a product from the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "An error occured while deleting the product"
          }
        }
      }
    },
    "/recursive/{id}": {
      "get": {
        "description": "Get a list of all the products added during the current session using recursion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }, "404": {
            "description": "Product not found"
          }
        }
      }
    }
  }
}